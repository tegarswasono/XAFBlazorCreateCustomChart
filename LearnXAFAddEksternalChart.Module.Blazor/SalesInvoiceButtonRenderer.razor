@using Microsoft.JSInterop
@using Microsoft.AspNetCore.Components.Web
@using DevExpress.Blazor
@inject IJSRuntime JSRuntime;
@using DevExpress.Xpo;
@using LearnXAFAddEksternalChart.Module.BusinessObjects;

<DxFormLayout CssClass="w-100">
    <DxFormLayoutGroup Caption="Filter" ColSpanMd="12">
        <DxFormLayoutItem Caption="Start Date:" ColSpanMd="12">
            <DxDateEdit @bind-Date="@StartDate" />
        </DxFormLayoutItem>
        <DxFormLayoutItem Caption="End Date:" ColSpanMd="12">
            <DxDateEdit @bind-Date="@EndDate" />
        </DxFormLayoutItem>
        <DxFormLayoutItem Caption="" ColSpanMd="12">
            <DxButton RenderStyle="ButtonRenderStyle.Secondary"
                      Text="Filter Chart"
                      title="Filter Chart."
                      CssClass="mr-1" Click="Button_Click" />
        </DxFormLayoutItem>
    </DxFormLayoutGroup>
    <DxFormLayoutGroup ColSpanMd="12" Caption="Chart">
        <div id="chart" style="width:500px; height: 300px;"></div>
    </DxFormLayoutGroup>
</DxFormLayout>

@code 
{
    DateTime StartDate { get; set; } = DateTime.Now.Date;
    DateTime EndDate { get; set; } = DateTime.Now.Date;

    [Parameter]
    public Session session { get; set; }

    async void Button_Click(MouseEventArgs e)
    {
        Order order = session.FindObject<Order>(null);

        int a = 5;
    }
    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        try
        {

            if (firstRender)
            {
                await JSRuntime.InvokeVoidAsync("triggerChart0");
                StateHasChanged();
            }
        }
        catch (JSException ex)
        {
            throw ex;
        }

        await base.OnAfterRenderAsync(firstRender);
    }
    public static RenderFragment Create(Session session) =>@<SalesInvoiceButtonRenderer session=@session />;
}
