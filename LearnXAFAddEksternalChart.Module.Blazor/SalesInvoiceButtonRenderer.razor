@using Microsoft.JSInterop
@using Microsoft.AspNetCore.Components.Web
@using DevExpress.Blazor
@inject IJSRuntime JSRuntime;
@using DevExpress.Xpo;
@using LearnXAFAddEksternalChart.Module.BusinessObjects;

<DxFormLayout CssClass="w-100">
    <DxFormLayoutGroup Caption="Filter" ColSpanMd="12">
        <DxFormLayoutItem Caption="Start Date:" ColSpanMd="12">
            <DxDateEdit @bind-Date="@StartDate" />
        </DxFormLayoutItem>
        <DxFormLayoutItem Caption="End Date:" ColSpanMd="12">
            <DxDateEdit @bind-Date="@EndDate" />
        </DxFormLayoutItem>
        <DxFormLayoutItem Caption="" ColSpanMd="12">
            <DxButton RenderStyle="ButtonRenderStyle.Secondary"
                      Text="Filter Chart"
                      title="Filter Chart."
                      CssClass="mr-1" Click="Button_Click" />
        </DxFormLayoutItem>
    </DxFormLayoutGroup>
    <DxFormLayoutGroup ColSpanMd="12" Caption="Chart">
        <DxChart T="TopOrderChartModel"
                 Data="@topOrderChartModels"
                 Width="100%">
            <DxChartTitle Text="Population: Age Structure">
                <DxChartSubTitle Text="Data Estimate for 2020" />
            </DxChartTitle>
            <DxChartBarSeries Name="Total Order"
                              T="TopOrderChartModel"
                              TArgument="string"
                              TValue="int"
                              ArgumentField="pasi => pasi.Name"
                              ValueField="pasi => pasi.Total"
                              SummaryMethod="Enumerable.Sum"
                              Filter='pasi => pasi.Type == TopOrderChartModelTypeEnum.TotalOrder' />
            <DxChartBarSeries Name="Total Pay"
                              T="TopOrderChartModel"
                              TArgument="string"
                              TValue="int"
                              ArgumentField="pasi => pasi.Name"
                              ValueField="pasi => pasi.Total"
                              SummaryMethod="Enumerable.Sum"
                              Filter='pasi => pasi.Type == TopOrderChartModelTypeEnum.TotalPay' />
            <DxChartLegend Position="RelativePosition.Outside"
                           HorizontalAlignment="HorizontalAlignment.Center"
                           VerticalAlignment="VerticalEdge.Bottom" />
            <DxChartTooltip Enabled="true"
                            Position="RelativePosition.Outside">
                <div style="margin: 0.75rem">
                    <div class="font-weight-bold">@context.Point.Argument</div>
                    <div>Type: @context.Point.SeriesName</div>
                    <div>Total: @($"{context.Point.Value:N0}")</div>
                </div>
            </DxChartTooltip>
        </DxChart>
        @*<div id="chart" style="width:500px; height: 300px;"></div>*@
    </DxFormLayoutGroup>
</DxFormLayout>

@code 
{
    DateTime StartDate { get; set; } = DateTime.Now.Date;
    DateTime EndDate { get; set; } = DateTime.Now.Date;
    List<TopOrderChartModel> topOrderChartModels { set; get; } = new List<TopOrderChartModel>();


    [Parameter]
    public Session session { get; set; }

    async void Button_Click(MouseEventArgs e)
    {
        Order order = session.FindObject<Order>(null);

        int a = 5;
    }
    protected override async Task OnInitializedAsync()
    {
        topOrderChartModels.Add(new TopOrderChartModel() { Name = "Baju Anak", Type = TopOrderChartModelTypeEnum.TotalOrder, Total = 4 });
        topOrderChartModels.Add(new TopOrderChartModel() { Name = "Baju Pria", Type = TopOrderChartModelTypeEnum.TotalOrder, Total = 7 });
        topOrderChartModels.Add(new TopOrderChartModel() { Name = "Baju Anak", Type = TopOrderChartModelTypeEnum.TotalPay, Total = 3 });
        topOrderChartModels.Add(new TopOrderChartModel() { Name = "Baju Pria", Type = TopOrderChartModelTypeEnum.TotalPay, Total = 9 });
    }
    public static RenderFragment Create(Session session) =>@<SalesInvoiceButtonRenderer session=@session />;

    public class TopOrderChartModel
    {
        public string Name { set; get; }
        public TopOrderChartModelTypeEnum Type { set; get; }
        public int Total { set; get; }
    }
    public enum TopOrderChartModelTypeEnum
        {
            TotalOrder, TotalPay
        }
}
